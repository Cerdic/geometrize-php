<?php

// Generated by Haxe 3.4.7
class geometrize_Model {
	public $width;
	public $height;
	public $target;
	public $current;
	public $buffer;
	public $score;

	public function __construct($target, $backgroundColor){
		if (!($target!==null)){
			throw new HException("FAIL: target != null");
		}
		$this->width = $target->width;
		$this->height = $target->height;
		$this->target = $target;
		$this->current = geometrize_bitmap_Bitmap::create($this->width,$this->height,$backgroundColor);
		$this->score = geometrize_Core::differenceFull($target, $this->current);

		$this->buffer = $this->current->hclone();
	}

	public function step($shapeTypes, $alpha, $n, $age){
		$state = geometrize_Core::bestHillClimbState($shapeTypes, $alpha, $n, $age, $this->target, $this->current, $this->buffer, $this->score);
		$results = [$this->addShape($state->shape, $state->alpha)];
		return $results;
	}

	public function addShape($shape, $alpha){
		if (!($shape!==null)){
			throw new HException("FAIL: shape != null");
		}
		$before = $this->current->hclone();

		$lines = $shape->rasterize();
		if (!isset($shape->color)){
			$shape->color = geometrize_Core::computeColor($this->target, $this->current, $lines, $alpha);
		}

		geometrize_rasterizer_Rasterizer::drawLines($this->current, $shape->color, $lines);
		$this->score = geometrize_Core::differencePartial($this->target, $before, $this->current, $this->score, $lines);
		$score_normalization = $before->width * $before->height * 4 * 255;
		$result = ["score" => $this->score/$score_normalization, "color" => $shape->color, "shape" => $shape];
		return $result;
	}

	public function __call($m, $a){
		if (isset($this->$m) && is_callable($this->$m)){
			return call_user_func_array($this->$m, $a);
		} else {
			if (isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m])){
				return call_user_func_array($this->__dynamics[$m], $a);
			} else {
				if ('toString'==$m){
					return $this->__toString();
				} else {
					throw new HException('Unable to call <' . $m . '>');
				}
			}
		}
	}

	function __toString(){
		return 'geometrize.Model';
	}
}
