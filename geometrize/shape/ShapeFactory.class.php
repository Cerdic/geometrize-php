<?php

// Generated by Haxe 3.4.7
class geometrize_shape_ShapeFactory {
	public function __construct(){
	}

	static function create($type, $xBound, $yBound){
		switch ($type) {
			case geometrize_shape_ShapeTypes::T_RECTANGLE:
				return new geometrize_shape_Rectangle($xBound, $yBound);
				break;
			case geometrize_shape_ShapeTypes::T_ROTATED_RECTANGLE:
				return new geometrize_shape_RotatedRectangle($xBound, $yBound);
				break;
			case geometrize_shape_ShapeTypes::T_TRIANGLE:
				return new geometrize_shape_Triangle($xBound, $yBound);
				break;
			case geometrize_shape_ShapeTypes::T_ELLIPSE:
				return new geometrize_shape_Ellipse($xBound, $yBound);
				break;
			case geometrize_shape_ShapeTypes::T_ROTATED_ELLIPSE:
				return new geometrize_shape_RotatedEllipse($xBound, $yBound);
				break;
			case geometrize_shape_ShapeTypes::T_CIRCLE:
				return new geometrize_shape_Circle($xBound, $yBound);
				break;
			case geometrize_shape_ShapeTypes::T_LINE:
				return new geometrize_shape_Line($xBound, $yBound);
				break;
			case geometrize_shape_ShapeTypes::T_QUADRATIC_BEZIER:
				return new geometrize_shape_QuadraticBezier($xBound, $yBound);
				break;
		}
	}

	static function randomShape($xBound, $yBound){
		$a = [
			geometrize_shape_ShapeTypes::T_RECTANGLE,
			geometrize_shape_ShapeTypes::T_ROTATED_RECTANGLE,
			geometrize_shape_ShapeTypes::T_TRIANGLE,
			geometrize_shape_ShapeTypes::T_ELLIPSE,
			geometrize_shape_ShapeTypes::T_ROTATED_ELLIPSE,
			geometrize_shape_ShapeTypes::T_CIRCLE,
			geometrize_shape_ShapeTypes::T_LINE,
			geometrize_shape_ShapeTypes::T_QUADRATIC_BEZIER,
		];
		return geometrize_shape_ShapeFactory::randomShapeOf($a, $xBound, $yBound);
	}

	static function randomShapeOf($types, $xBound, $yBound){
		if (!is_array($types) || !count($types)){
			throw new HException("FAIL: types != null && count(types) > 0");
		}
		return geometrize_shape_ShapeFactory::create($types[mt_rand(0, count($types)-1)], $xBound, $yBound);
	}

	function __toString(){
		return 'geometrize.shape.ShapeFactory';
	}
}
